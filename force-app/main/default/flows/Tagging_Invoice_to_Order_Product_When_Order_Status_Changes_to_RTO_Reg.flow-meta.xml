<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <areMetricsLoggedToDataCloud>false</areMetricsLoggedToDataCloud>
    <assignments>
        <name>Current_Loop_Item</name>
        <label>Current Loop Item</label>
        <locationX>138</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>currentOrderProduct</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Over_Get_Order_Proucts</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Current_Loop_Item</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Current_Loop_Item1</name>
        <label>Current Loop Item2</label>
        <locationX>402</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>currentOrderProduct</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Over_Get_Order_Proucts</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Current_Loop_Item2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Current_Loop_Item2</name>
        <label>Current Loop Item3</label>
        <locationX>666</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>currentOrderProduct</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Over_Get_Order_Proucts</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Current_Loop_Item3</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Current_loop_Item3</name>
        <label>Current loop Item4</label>
        <locationX>930</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>currentOrderProduct</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Over_Get_Order_Proucts</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Current_Loop_Item4</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Current_loop_Item4</name>
        <label>Current loop Item5</label>
        <locationX>1194</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>currentOrderProduct</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Over_Get_Order_Proucts</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Current_Loop_Item5</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Current_Loop_Item_6</name>
        <label>Current Loop Item 6</label>
        <locationX>1458</locationX>
        <locationY>863</locationY>
        <assignmentItems>
            <assignToReference>currentOrderProduct</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Over_Get_Order_Proucts</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Update_Current_Loop_Item6</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>List_to_update</name>
        <label>List to update</label>
        <locationX>138</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>orderProductToUpdate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>currentOrderProduct</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_Get_Order_Proucts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>List_to_update2</name>
        <label>List to update2</label>
        <locationX>402</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>orderProductToUpdate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>currentOrderProduct</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_Get_Order_Proucts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>List_to_update3</name>
        <label>List to update3</label>
        <locationX>666</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>orderProductToUpdate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>currentOrderProduct</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_Get_Order_Proucts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>List_to_update4</name>
        <label>List to update4</label>
        <locationX>930</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>orderProductToUpdate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>currentOrderProduct</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_Get_Order_Proucts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>List_To_Update5</name>
        <label>List To Update5</label>
        <locationX>1194</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>orderProductToUpdate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>currentOrderProduct</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_Get_Order_Proucts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>List_To_Update6</name>
        <label>List To Update6</label>
        <locationX>1458</locationX>
        <locationY>1079</locationY>
        <assignmentItems>
            <assignToReference>orderProductToUpdate</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>currentOrderProduct</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Over_Get_Order_Proucts</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Current_Loop_Item</name>
        <label>Update Current Loop Item</label>
        <locationX>138</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>currentOrderProduct.Order_Invoice__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Accessories_Type_Invoice.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>List_to_update</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Current_Loop_Item2</name>
        <label>Update Current Loop Item2</label>
        <locationX>402</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>currentOrderProduct.Order_Invoice__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Records_4.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>List_to_update2</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Current_Loop_Item3</name>
        <label>Update Current Loop Item3</label>
        <locationX>666</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>currentOrderProduct.Order_Invoice__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Vehicle_Type_Invoice.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>List_to_update3</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Current_Loop_Item4</name>
        <label>Update Current Loop Item4</label>
        <locationX>930</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>currentOrderProduct.Order_Invoice__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Add_on_Type_Invoice.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>List_to_update4</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Current_Loop_Item5</name>
        <label>Update Current Loop Item5</label>
        <locationX>1194</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>currentOrderProduct.Order_Invoice__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Other_Type_Invoice.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>List_To_Update5</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Update_Current_Loop_Item6</name>
        <label>Update Current Loop Item6</label>
        <locationX>1458</locationX>
        <locationY>971</locationY>
        <assignmentItems>
            <assignToReference>currentOrderProduct.Order_Invoice__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Merchandise_Type_Invoice.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>List_To_Update6</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Copy_1_of_If_Order_Product_Type_Decision</name>
        <label>If Order Product Type Decision</label>
        <locationX>930</locationX>
        <locationY>647</locationY>
        <defaultConnector>
            <targetReference>Loop_Over_Get_Order_Proucts</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Copy_1_of_If_Order_Product_Type_is_Parts</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Over_Get_Order_Proucts.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Parts</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Accessories_Type_Invoice</targetReference>
            </connector>
            <label>If Order Product Type is Parts</label>
        </rules>
        <rules>
            <name>Copy_1_of_If_the_Order_Product_Type_is_Accessories</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Over_Get_Order_Proucts.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Accessories</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Records_4</targetReference>
            </connector>
            <label>If the Order Product Type is Accessories</label>
        </rules>
        <rules>
            <name>Copy_1_of_If_the_order_product_type_is_vehicle</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Over_Get_Order_Proucts.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Vehicle</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Vehicle_Type_Invoice</targetReference>
            </connector>
            <label>If the order product type is vehicle</label>
        </rules>
        <rules>
            <name>If_Order_Product_type_is_Add_ons</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Over_Get_Order_Proucts.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Add-ons</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Add_on_Type_Invoice</targetReference>
            </connector>
            <label>If Order Product type is Add-ons</label>
        </rules>
        <rules>
            <name>If_Order_Type_Others</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Over_Get_Order_Proucts.Type__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Parts</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_Over_Get_Order_Proucts.Type__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Accessories</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_Over_Get_Order_Proucts.Type__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Add-ons</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_Over_Get_Order_Proucts.Type__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Vehicle</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>Loop_Over_Get_Order_Proucts.Type__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Merchandise</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Other_Type_Invoice</targetReference>
            </connector>
            <label>If Order Type Others</label>
        </rules>
        <rules>
            <name>If_Order_Product_type_Is_Mercha</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Loop_Over_Get_Order_Proucts.Type__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Merchandise</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Merchandise_Type_Invoice</targetReference>
            </connector>
            <label>If Order Product type Is Merchandise</label>
        </rules>
    </decisions>
    <decisions>
        <name>If_Order_Status_is_changed_to_RTO_reg</name>
        <label>If Order Status is changed to RTO reg..</label>
        <locationX>182</locationX>
        <locationY>323</locationY>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Status</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>RTO Registration</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.Id</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <elementReference>$Label.Vehicle_RecordTypeId</elementReference>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Order_Products</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>Tagging Invoice to Order Product When Order Status Changes to RTO Reg {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Tagging Invoice to Order Product When Order Status Changes to RTO Reg</label>
    <loops>
        <name>Loop_Over_Get_Order_Proucts</name>
        <label>Loop Over Get Order Proucts</label>
        <locationX>50</locationX>
        <locationY>539</locationY>
        <collectionReference>Get_Order_Products</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Copy_1_of_If_Order_Product_Type_Decision</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Update_The_List_Of_Order_Products</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_Accessories_Type_Invoice</name>
        <label>Get Accessories Type Invoice</label>
        <locationX>138</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Current_Loop_Item</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Order__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Invoice_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Accessories Invoice</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order_Invoice__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Add_on_Type_Invoice</name>
        <label>Get Add-on Type Invoice</label>
        <locationX>930</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Current_loop_Item3</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Order__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Invoice_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Add-ons Invoice</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order_Invoice__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Merchandise_Type_Invoice</name>
        <label>Get Merchandise Type Invoice</label>
        <locationX>1458</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Current_Loop_Item_6</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Order__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Invoice_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Merchandise Invoice</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order_Invoice__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Order_Products</name>
        <label>Get Order Products</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Over_Get_Order_Proucts</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>OrderId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>OrderItem</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Other_Type_Invoice</name>
        <label>Get Other Type Invoice</label>
        <locationX>1194</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Current_loop_Item4</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Order__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Invoice_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Other Charges Invoice</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order_Invoice__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Records_4</name>
        <label>Get Accessories Type Invoice</label>
        <locationX>402</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Current_Loop_Item1</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Order__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Invoice_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Accessories Invoice</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order_Invoice__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Vehicle_Type_Invoice</name>
        <label>Get Vehicle Type Invoice</label>
        <locationX>666</locationX>
        <locationY>755</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Current_Loop_Item2</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Order__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Invoice_Type__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Vehicle Invoice</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Order_Invoice__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_The_List_Of_Order_Products</name>
        <label>Update The List Of Order Products</label>
        <locationX>50</locationX>
        <locationY>1355</locationY>
        <inputReference>orderProductToUpdate</inputReference>
    </recordUpdates>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>If_Order_Status_is_changed_to_RTO_reg</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Status</field>
            <operator>IsChanged</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>Order</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>currentOrderProduct</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>OrderItem</objectType>
    </variables>
    <variables>
        <name>orderProductToUpdate</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>true</isOutput>
        <objectType>OrderItem</objectType>
    </variables>
</Flow>
